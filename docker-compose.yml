services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: laravel-vue-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_vue_challenge
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - laravel-vue-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: laravel-vue-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel-vue-network

  # Laravel Backend
  laravel:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel-vue-backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel_vue_challenge
      - DB_USERNAME=laravel
      - DB_PASSWORD=laravel
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - laravel-vue-network
    command: >
      sh -c "
        composer install --no-interaction --prefer-dist --optimize-autoloader &&
        php artisan key:generate --force &&
        php artisan migrate --force &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  # Vue.js Frontend
  vue:
    build:
      context: .
      dockerfile: docker/vue/Dockerfile
    container_name: laravel-vue-frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./resources/js:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api
    networks:
      - laravel-vue-network
    command: npm run dev -- --host 0.0.0.0

  # Nginx (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: laravel-vue-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - laravel
      - vue
    networks:
      - laravel-vue-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  laravel-vue-network:
    driver: bridge
